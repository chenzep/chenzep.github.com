<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Octopress | Chenzep的博客]]></title>
  <link href="http://yoursite.com/blog/categories/octopress/atom.xml" rel="self"/>
  <link href="http://yoursite.com/"/>
  <updated>2013-06-19T18:58:57+08:00</updated>
  <id>http://yoursite.com/</id>
  <author>
    <name><![CDATA[Chenzep]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[用Octopress建Blog(高级篇)]]></title>
    <link href="http://yoursite.com/blog/2013/06/19/octopress-adv/"/>
    <updated>2013-06-19T11:53:00+08:00</updated>
    <id>http://yoursite.com/blog/2013/06/19/octopress-adv</id>
    <content type="html"><![CDATA[<ol>
<li><p>准备</p>

<ul>
<li><p>编码。octopress的配置文件如果包含有中文，则此文件必须使用无BOM的UTF-8编码，否则<code>rake generate</code>的时候会出错。 使用UltraEdit的<code>文件--&gt;另存为</code>可以把文件保存为无BOM的UTF-8编码格式。</p>

<p>  <img src="/images/pic/octopress_adv_encode.jpg" alt="" /></p></li>
</ul>
</li>
<li><p>参考<br/>
本来是想自己写的，但是发现网上有一篇整理的很好的文章，就不重复劳动了。文章链接如下：<br/>
 <a href="http://www.cnblogs.com/oec2003/archive/2013/05/31/3109577.html">http://www.cnblogs.com/oec2003/archive/2013/05/31/3109577.html</a></p></li>
<li><p>Disqus设置</p>

<ul>
<li>设置语言
  Setting-->General-->Language-->chinese
  <img src="/images/pic/octopress_adv_disqus_language.jpg" alt="" /></li>
<li>去掉广告
<img src="/images/pic/octopress_adv_disqus_justcomment.jpg" alt="" /></li>
</ul>
</li>
<li><p>关于More
 正确的书写应该如下，注意空格，很多网站就是空格错误，导致无效。</p>

<pre><code> &lt;!-- more --&gt;
</code></pre></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用Octopress建Blog(基础篇)]]></title>
    <link href="http://yoursite.com/blog/2012/12/27/octopress-base/"/>
    <updated>2012-12-27T11:38:00+08:00</updated>
    <id>http://yoursite.com/blog/2012/12/27/octopress-base</id>
    <content type="html"><![CDATA[<ol>
<li><p>安装railsinstaller.<br/>
 点击<a href="http://railsinstaller.org/">这里</a>到官方网站下载软件.railsinstaller包含了ruby,rails,bundle等一系列工具，具体可以看官方网站的说明。安装过程比较简单，就是不断的Next,除了安装路径，其他使用默认设置即可。</p></li>
<li><p>配置rails环境<br/>
 在安装railsinstaller的最后一步，有一个配置项，提示用户是否进入rails环境配置，此配置项默认情况下是选中的。如果进入了rails配置环境，用户需要输入自己的用户名和邮箱，输入完成之后，程序自动生成一个ssh_key,放在用户目录的.ssh子目录下。运行过程的相关信息如下：</p></li>
</ol>


<!-- more -->


<pre><code>    # Rails Environment Configuration.

    Your git configuration is incomplete.
    user.name and user.email are required for properly using git and services such
    as GitHub ( http://github.com/ ).

     Please enter your name, for example mine is: Wayne E. Seguin
    name &gt; xxxxxxx
    Setting user.name to xxxxxxx

     Please enter your email address, for example mine is: wayneeseguin@gmail.com
    email &gt; xxxxxxx@gmail.com
    Setting user.email to xxxxxxx@gmail.com

    ---
    git:
      user.name:  xxxxxxx
      user.email: xxxxxxx@gmail.com
      version:    git version 1.7.9.msysgit.0

    ruby:
      bin:        D:/RailsInstaller/Ruby1.9.2/bin/ruby.exe
      version:    ruby 1.9.3p125 (2012-02-16) [i386-mingw32]

    rails:
      bin:        D:/RailsInstaller/Ruby1.9.2/bin/rails.bat
      version:    Rails 3.2.1

    ssh:
      public_key_location: C:\Users\xxxxxxx/.ssh/id_rsa.pub
      public_key_contents: ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA0u36KdY6zTS3RpLO1C6Gh
    tVr3ELzYRhGzjU2vcxXdGdAeLrLPfN7G6aUQ65qrW3pTwb8zcZrrEmdhx2/xV3mkAFiE5riB2ZGLw2se
    pRZdnmkiyULV33c51KYsltyO6F37RWtdbAQA2OjPNGuTL+DtxwmdDeObUjKJjkt8RxFtWqCJ0TqH+aMw
    r+MPycNxSamk1Ady5DySM5EH8YTbchD+GFU93VWRAFpydTy8ZAWhlx4PsBoWbONzrlhtqjovNsKRw5VH
    atk58hxsp1HPRR5XvF0LYd401QiwArDuw/m41rhrp8CyMzb0dTOQGxfl3ckNmcBovjSyaqbVYkY32Crm
    Q== xxxxxxx &lt;xxxxxxx@gmail.com&gt;

    C:\Sites&gt;

这里要说明几点:
- C:\Users\xxxxxxx/.ssh/id_rsa.pub是ssh的公匙，对应的私匙是同样目录下的id_rsa文件.
- 安装完成之后，如果要执行相关命令,我们可以通过`开始菜单--&gt;railsinstaller--&gt;git bash`来进入bash窗口,输入命令。
- Windows路径的访问，比如`c:\Sites`,在bash下对应的是`/c/Sites`.
</code></pre>

<ol>
<li><p>配置Gems源<br/>
 把默认的Gems源改成ruby.taobao.com</p>

<pre><code> C:\Sites&gt;gem source -l
 *** CURRENT SOURCES ***

 http://rubygems.org/

 C:\Sites&gt;gem source -r http://rubygems.org/
 http://rubygems.org/ removed from sources

 C:\Sites&gt;gem source -a http://ruby.taobao.org
 http://ruby.taobao.org added to sources

 C:\Sites&gt;gem source -l
 *** CURRENT SOURCES ***

 http://ruby.taobao.org

 C:\Sites&gt;   
</code></pre></li>
<li><p>创建github库</p>

<ul>
<li>创建github非常简单，需要注意的是库名最好是Username.github.com的形式。这样的话，我们就可以通过http://Username.github.com的URL访问BLOG了。 <br/>
  <img src="/images/pic/octopress_base_github_new.png" alt="" /><br/>
  图片中的叹号表明我已经创建了此库，不能再次创建。</li>
<li>添加SSH Public_key<br/>
  a. 点击右上角的<code>account setting</code>按钮,进入setting页面。接着点击页面中的ssh keys按钮，添加一个SSH key。然后把上面的id_rsa.pub文件中的内容拷贝到Key框中，如下图所示，接着点击<code>Add Key</code>按钮,按照提示输入github账户的密码，SSH Key加入成功。<br/>
  <img src="/images/pic/octopress_base_sshkey_add.png" alt="" /></li>
</ul>
</li>
<li><p>下载Octopress源码<br/>
 点击<a href="http://octopress.org/">这里</a>到官方网站,点击<a href="https://github.com/imathis/octopress">这里</a>下载相关源代码。下载好源代码后,运行git bash,进入源码根目录，后续的操作都在此环境下进行。</p></li>
<li><p>下载Octopress的依赖包</p>

<ul>
<li>修改根目录下Gemfile文件，将数据源改成source "http://ruby.taobao.org"</li>
<li>运行bundle install 命令,然后等待依赖包更新完成(有些网上教程说用bundle update,最好不要这样。因为update使用最新的包，在ruby世界，最新的不一定是匹配的)。</li>
</ul>
</li>
<li><p>安装主题<br/>
 运行rake install.此命令就是把主题拷贝到相应的位置，下面是运行的输出结果。</p>

<pre><code> ## Copying classic theme into ./source and ./sass
 mkdir -p source
 cp -r .themes/classic/source/. source
 mkdir -p sass
 cp -r .themes/classic/sass/. sass
 mkdir -p source/_posts
 mkdir -p public
</code></pre></li>
<li><p>用git管理<em>posts目录<br/>
 在安装完主题后，系统会自动创建一个空目录source/</em>posts，以后创建的文章都会保存在这个目录内,我们需要对它用Git进行管理.</p>

<ul>
<li><p>初始化版本库.</p>

<blockquote><p>$ cd source/_posts/<br/>
$ git init<br/>
$ touch README.md<br/>
$ git add *<br/>
$ git commit -m "first commit"</p></blockquote></li>
<li><p>备份到github</p>

<blockquote><p>$ git remote add origin git@github.com:[Username]/[Repository].git<br/>
$ git checkout -b md<br/>
$ git push origin md</p></blockquote></li>
</ul>
</li>
<li><p>生成Blog文件<br/>
 现在回到Octopress的根目录，运行下面命令</p>

<blockquote><p>$ rake generate</p></blockquote></li>
<li><p>本地测试</p>

<ul>
<li><p>启动rake服务:</p>

<blockquote><p>$ rake preview</p></blockquote></li>
<li><p>打开网页,输入localhost:4000,如果一切正常，你将会看到你的BLOG首页了。当然，首页除了框架，什么内容都没有.</p></li>
</ul>
</li>
<li><p>Blog同步到github.</p>

<ul>
<li>指定github库的URL,运行命令

<blockquote><p>$ rake setup_github_pages</p></blockquote></li>
</ul>


<p>  然后会提示你输入github的URL，此URL和上面的“git remote add origin git@github.com:[Username]/[Repository].git"是一样的。</p>

<pre><code> windows下可能会在My Octopress Page is coming soon之后出现hellip;不是内部命令之类的错误, 可以不用管.
 如果一定不想要出现这个错误可以修改myoctopress目录下的Rakefile, 搜My Octopress Page is coming soon,
 在…前加个(这个是Windows cmd的转义符), 如下
 system “echo ‘My Octopress Page is coming soon ^…’ &gt; index.html” rake setup_github_pages
 命令最后出现Now you can deploy to xxxxxxx with rake deploy, 就表示成功.
</code></pre>

<ul>
<li><p>同步到github,运行命令</p>

<blockquote><p>$ rake deploy</p></blockquote></li>
<li><p>如果一切正常，等上10分钟左右，根据你github库的URL地址输入对应的http地址，就会看到效果了。<br/>
  a.如果你创建库的URL形式是git@github.com:[Username]/[Username].github.com.git,</p>

<pre><code>   blog的http地址就是http://Username.github.com  
</code></pre>

  b.如果库是非a形式的URL git@github.com:[Username]/[Repository].git

<pre><code>   blog的http地址就是http://Username.github.com/Repository
</code></pre>

<p>  c.绑定自己的域名，这个就不在讨论范围之内了。</p></li>
</ul>
</li>
<li><p>添加第一篇文章</p>

<ul>
<li>OctoPress的文章默认是用Markdown写的，具体教程点击<a href="http://wowubuntu.com/markdown/">这里</a></li>
<li>我是使用markdownpad工具来书写Marddown的，工具的下载点击<a href="http://markdownpad.com/">这里</a></li>
<li><p>运行<code>rake new_post["Hello World"]</code>,会在source/_posts目录下生成一个markdown文件。</p>

<blockquote><p>Creating new post: source/_posts/2012-12-27-hello-world.markdown</p></blockquote></li>
<li><p>随便在markdown文件上写点东西，如果有中文，会导致错误，解决方法请看下面内容。</p></li>
<li>运行<code>rake generate</code>。</li>
<li>如果生成成功， 接着运行<code>rake preview</code>,在浏览器上输入<code>localhost:4000</code>就可以看到你的第一篇文章了。</li>
</ul>
</li>
<li><p>加入Octopress对中文的支持<br/>
 Octopress默认情况下是不支持中文的，如果你的Markdown文件中包含有中文字符，在<code>rake generate</code>阶段会导致生成错误，要解决这个问题，运行下面命令</p>

<blockquote><p>$ cd<br/>
$ echo "export LC_ALL=en_US.UTF-8" > .bash_profile<br/>
$ echo "export LANG=en_US.UTF-8" >> .bash_profile</p></blockquote>

<p> 完成之后，关闭并重进bash即可。</p></li>
<li><p>总结</p>

<ol>
<li>执行rake new_post['title']来生成一个博文；</li>
<li>找对生成的markdown文件，编辑内容；</li>
<li>执行rake generate来生成文章；</li>
<li>执行rake preview在本地预览；</li>
<li>执行rake deploy发布到Github中。</li>
<li>执行下面命令将修改的源码推送到source分支：

<blockquote><p>git add .<br/>
git commit -m “your message”<br/>
git push origin source</p></blockquote></li>
</ol>
</li>
<li><p>参考文章</p>

<ul>
<li><a href="http://mrzhang.me/blog/blog-equals-github-plus-octopress.html">Blog = GitHub + Octopress</a></li>
<li><a href="http://www.ruanyifeng.com/blog/2012/08/blogging_with_jekyll.html">搭建一个免费的，无限流量的Blog----github Pages和Jekyll入门</a></li>
<li><a href="http://yanping.me/cn/blog/2012/03/18/github-pages-step-by-step/#ruby">Github Pages极简教程</a></li>
<li><a href="http://wowubuntu.com/markdown/">Markdown 语法说明</a></li>
<li><a href="http://www.yangzhiping.com/tech/r-markdown-knitr.html">为什么Markdown+R有较大概率成为科技写作主流</a></li>
<li><a href="http://yanping.me/cn/blog/2012/10/09/chinese-charset-problems-with-jekyll/">在Windows下使用jekyll如何避免出现中文字符集错误</a></li>
<li><a href="http://jenwang.org/blog/2013/01/23/how-to-octopress/">How-to-octopress</a></li>
<li><a href="http://www.cnblogs.com/oec2003/archive/2013/05/27/3100896.html">Windows下搭建Octopress博客</a></li>
</ul>
</li>
</ol>

]]></content>
  </entry>
  
</feed>
